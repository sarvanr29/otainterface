{"version":3,"sources":["./src/app/pages/alert/alert.component.ts","./src/app/pages/alert/alert.component.html","./src/app/pages/alert/alert.ts","./src/environments/environment.ts","./src/app/pages/create-device/create-device.component.ts","./src/app/pages/create-device/create-device.component.html","./src/app/pages/firmware/firmware.component.html","./src/app/pages/firmware/firmware.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/service.service.ts","./src/app/auth.guard.ts","./src/app/pages/alert/alert.service.ts","./src/app/app-routing.module.ts","./src/app/pages/device-list/device-list.component.html","./src/app/pages/device-list/device-list.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from './alert.service';\nimport { Alert, AlertType } from './alert';\n\n\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription!: Subscription;\n    routeSubscription!: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // reset 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => x.keepAfterRouteChange = false);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        // fade out alert if this.fade === true\n        const timeout = this.fade ? 250 : 0;\n        alert.fade = this.fade;\n\n        setTimeout(() => {\n            // filter alert out of array\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }, timeout);\n    }\n\n    cssClass(alert: Alert) {\n        if (alert?.type === undefined) {\n          return null;\n        }\n\n        const alertTypeClass = {\n            [AlertType.Success]: 'alert-success',\n            [AlertType.Error]: 'alert-danger',\n            [AlertType.Info]: 'alert-info',\n            [AlertType.Warning]: 'alert-warning'\n        }\n\n        const classes = [alertTypeClass[alert.type]];\n\n        if (alert.fade) classes.push('fade');\n\n        // return space separated class string\n        return classes.join(' ');\n    }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"alert alert-dismissible mt-4 container\" [ngClass]=\"cssClass(alert)\">\n  <span [innerHTML]=\"alert.message\"></span>\n  <button class=\"btn-close\" (click)=\"removeAlert(alert)\"></button>\n</div>\n","export class Alert {\n  id?: string;\n  type?: AlertType;\n  message?: string;\n  autoClose?: boolean;\n  keepAfterRouteChange?: boolean;\n  fade?: boolean;\n\n  constructor(init?: Partial<Alert>) {\n      Object.assign(this, init);\n  }\n}\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning\n}\n\nexport class AlertOptions {\n  id?: string;\n  autoClose?: boolean;\n  keepAfterRouteChange?: boolean;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: '//18.204.89.28:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ServiceService } from '../../service.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n  selector: 'app-create-device',\n  templateUrl: './create-device.component.html',\n  styleUrls: ['./create-device.component.scss']\n})\nexport class CreateDeviceComponent implements OnInit {\n  form: FormGroup;\n  submitted = false;\n  constructor(private cd: ChangeDetectorRef, private formBuilder: FormBuilder,private service : ServiceService,private router:Router,\n    private alertService: AlertService) {\n    this.form = this.formBuilder.group({\n      name: ['',Validators.required],\n      serialNo: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  get name() {\n    return this.form.get('name');\n  }\n\n  get serialNo() {\n    return this.form.get('serialNo');\n  }\n  get description() {\n    return this.form.get('description');\n  }\n\n\n  createDevice() {\n    this.submitted = true;\n\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n    const userData = this.form.value;\n    console.log(this.form.value);\n    const { name, serialNo,description } = this.form.value;\n    this.service.addDevice(name,serialNo,description).subscribe(\n      data => {\n        console.log('create')\n       console.log(data)\n        if(data.status==\"success\")\n        {\n          this.alertService.success('Device added successfully', { keepAfterRouteChange : true });\n          this.router.navigate(['/devicelist']);\n        }\n        else{\n          console.log('error');\n        }\n      },\n      error => {\n        //this.errorMessage = error.message;\n        if(error.error.status == \"error\") {\n          window.localStorage.setItem(\"token\", '');\n        //  this.router.navigate(['/signin']);\n        }\n      });\n\n  }\n\n}\n","<div class=\"signup\">\n  <div class=\"signup-form\">\n      <h4>Add Device</h4>\n      <form class=\"form-input\" [formGroup]=\"form\">\n        <div class=\"form-group\">\n          <label>Device Name</label>\n          <input type=\"text\" placeholder=\"\" id=\"name\" formControlName=\"name\"/>\n          <div *ngIf=\"submitted && name.errors\" class=\"error\">\n            <div *ngIf=\"name.errors.required\">\n              Device name is required.\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Serial Number</label>\n          <input type=\"text\" placeholder=\"\" id=\"serialNo\" formControlName=\"serialNo\"/>\n          <div *ngIf=\"submitted && serialNo.errors\" class=\"error\">\n            <div *ngIf=\"serialNo.errors.required\">\n              Serial number is required.\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Description</label>\n            <input type=\"text\" placeholder=\"\" id=\"description\" formControlName=\"description\"/>\n            <div *ngIf=\"submitted && description.errors\" class=\"error\">\n              <div *ngIf=\"description.errors.required\">\n                Description is required.\n              </div>\n            </div>\n        </div>\n\n        <div class=\"form-group buttons\">\n            <button class=\"btn btn-primary\" (click)=\"createDevice()\">\n                Create\n            </button>\n        </div>\n    </form>\n  </div>\n</div>\n","<div class=\"firmware\">\n<h4 *ngIf=\"!noheader\">Firmware details</h4>\n<a class=\"devices-link\"  routerLink=\"/devicelist\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\n  <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"/>\n</svg> Go to devices</a>\n<ul *ngFor = 'let item of firmwareDetails; let i = index'>\n  <li><p>Model ID</p> <span>{{item?.model_id}}</span></li>\n  <li><p>Model serial no</p> <span>{{item?.model_sr_no}}</span></li>\n  <li><p>Organisation</p><span>{{item?.organisation}}</span></li>\n  <li><p>Version</p> <span>{{item?.version}}</span></li>\n  <li><p>Created at</p> <span>{{item?.created_at}}</span></li>\n  <li><p>Release date</p> <span>{{item?.releaseDate}}</span></li>\n  <li><p>Status</p> <span [ngClass]=\"(item?.status == 1)? 'green':'orange'\" style =\"font-family: 'arlrdbd';\">{{item?.status == 1? 'Äctive':'Inactive'}} <span class=\"edit-icon\" (click)=\"disabledFirmware($event)\"></span></span></li>\n</ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n  selector: 'app-firmware',\n  templateUrl: './firmware.component.html',\n  styleUrls: ['./firmware.component.scss']\n})\nexport class FirmwareComponent implements OnInit {\n\nnoheader:boolean;\n  firmwareDetails : any[] = [];\n  constructor(private service : ServiceService,private router:Router,private alertService: AlertService,\n    private activatedRoute: ActivatedRoute) {\n\n   }\n\n  ngOnInit(): void {\n    this.getFirmwareDetails();\n  }\n\n  getFirmwareDetails() {\n    let id =  this.activatedRoute.snapshot.paramMap.get('id')\n    console.log(id)\n    this.service.getFirmware(id).subscribe(\n      data => {\n        console.log(data)\n        if(data.status==\"success\" && data?.data?.firmwares?.length > 0)\n        {\n\n          this.firmwareDetails = data.data.firmwares;\n          this.firmwareDetails.forEach(function(result, index) {\n            let date =new Date(result.created_at);\n            let release = new Date(result.releaseDate)\n           result.created_at=[date.getFullYear(), date.getMonth()+1, date.getDate()].join('/');\n           result.releaseDate = [release.getFullYear(), release.getMonth()+1, release.getDate()].join('/');\n          });\n          console.log(this.firmwareDetails)\n        }\n        else{\n          this.alertService.success('No Firmeware found', { keepAfterRouteChange : true });\n          console.log('error')\n          this.noheader = true;\n        }\n      },\n      error => {\n        console.log(error)\n\n      });\n  }\n  disabledFirmware(event: Event) {\n    let uid = this.firmwareDetails[0]?.uid;\n    let model_id = this.firmwareDetails[0]?.model_id;\n  this.service.disabledFirmware(uid,model_id).subscribe(resp => {\n   // console.log(resp);\n    this.getFirmwareDetails();\n  },error => {\n    console.log(error)\n  });\n    event.preventDefault();\n  }\n}\n","import { Component, OnDestroy,  HostListener, Input, ChangeDetectorRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  title = 'FotaApp';\n  constructor() {\n  }\n   ngOnInit() {\n\n  }\n  ngOnDestroy() {\n\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light nav-ota\">\n  <div class=\"container-fluid\">\n      <div class=\"left-sidenav\">\n        <img width=\"270px\" src=\"https://www.faststreamtech.com/wp-content/uploads/2022/11/FASTSTREAM-LOGO-FINAL-02.png\">\n      </div>\n      <!--<h2 style=\"position: absolute;left: 375px;top: 20px;\">OTA User interface</h2>-->\n      <div class=\"signin\">\n        <alert></alert>\n        <div style=\"position:relative; top:70px;\">\n        </div>\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n</nav>\n\n","import { Component, OnInit, Input, Output, EventEmitter, HostListener, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ServiceService } from 'src/app/service.service';\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  openSignin: boolean;\n  loginForm: FormGroup;\n  constructor(private cd: ChangeDetectorRef, private formBuilder: FormBuilder,private service : ServiceService,\n    private router:Router) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n   }\n  ngOnInit(): void {\n    document.querySelector('html').classList.remove('devicelist');\n  }\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n   onSubmit() {\n    // if (this.loginForm.invalid) {\n    //   this.loginForm.markAllAsTouched();\n    //   return; // Form is not valid, do not proceed with login\n    // }\n    const { email, password } = this.loginForm.value;\n    this.service.login(email,password).subscribe(\n      data => {\n       // console.log(data)\n        if(data.status==\"success\")\n        {\n          window.localStorage.setItem(\"token\", data.data.access_token);\n          window.localStorage.setItem(\"data\", JSON.stringify(data.data.company));\n         //this.service.companyDetails = data.data.company;\n          this.router.navigate(['/devicelist']);\n        }\n        else{\n          console.log('error')\n         // this.errorMessage = data.Message;S\n        }\n      },\n      error => {\n        //this.errorMessage = error.message;\n      });\n    // Perform login logic here\n    /*const userData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      userData &&\n      userData.username === this.loginForm.value.username &&\n      userData.password === this.loginForm.value.password\n    ) {\n      // User is authenticated\n    } else {*\n      // User is not authenticated\n    }*/\n  }\n}\n","<div class=\"nav-item dropdown signin-container d-flex\">\n  <div class=\"signin\">\n    <div class=\"login-form\">\n      <div class=\"user-image\">\n        <p>Login into your account</p>\n      </div>\n      <form  [formGroup]=\"loginForm\">\n        <div class=\"form-group\">\n            <input type=\"text\" placeholder=\"Email address\" id=\"email\" formControlName=\"email\" />\n            <div [hidden]=\"email.valid || email.untouched\" class=\"error\">\n              <div *ngIf=\"email?.errors?.required\">\n                Email is required.\n              </div>\n              <div *ngIf=\"email?.errors?.email\">\n                Invalid email format.\n              </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" placeholder=\"Password\" id=\"password\" formControlName=\"password\"/>\n            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\n              <div *ngIf=\"password?.errors?.required\">\n                Password is required.\n              </div>\n            </div>\n        </div>\n        <div class=\"form-group buttons\">\n            <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\n                Log In\n            </button>\n            <p class=\"btn-signup\">Don't have an account? <a href=\"javascript:void(0);\">Signup</a></p>\n            <a href=\"javascript:void(0);\" class=\"link-forgot\">Forgot password?</a>\n          </div>\n    </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { DeviceListComponent } from './pages/device-list/device-list.component';\nimport { CreateDeviceComponent } from './pages//create-device/create-device.component';\nimport { AlertComponent } from './pages/alert/alert.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FirmwareComponent } from './pages/firmware/firmware.component';\nimport { AuthService } from './auth.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    DeviceListComponent,\n    CreateDeviceComponent,\n    AlertComponent,\n    FirmwareComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy},AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n  getToken() {\n    return window.localStorage.getItem(\"token\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport { from, Observable, Subject } from 'rxjs';\nimport { environment } from '../environments/environment';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceService {\n  Url: string;\n  SharingData = new Subject();\n  companyDetails: any;\n  constructor(private http: HttpClient) {}\n\n  login(username, password) {\n    return this.http.post<any>(\n      `${environment.apiUrl}/api/v1/iot/company/login/`,\n      { email: username, password: password }\n    );\n  }\n\n  getDeviceList() {\n    let auth_token = window.localStorage.getItem(\"token\");\n\n     let data= window.localStorage.getItem(\"data\");\n     this.companyDetails = JSON.parse(data);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${auth_token}`,\n    });\n\n    const requestOptions = { headers: headers };\n    return this.http.get<any>(\n      `${environment.apiUrl}/api/v1/iot/company/getdevicemodels/`,\n      requestOptions\n    );\n  }\n  addDevice(name, serial,description) {\n    let auth_token = window.localStorage.getItem(\"token\");\n\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${auth_token}`,\n    });\n\n    const requestOptions = { headers: headers };\n    return this.http.post<any>(\n      `${environment.apiUrl}/api/v1/iot/company/add/devicemodel/`,\n      { model_name: name, model_serial_no: serial, model_description: description},{headers}\n    );\n  }\n  getFirmware(id) {\n    let auth_token = window.localStorage.getItem(\"token\");\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${auth_token}`,\n    });\n    const requestOptions = { headers: headers };\n    return this.http.get<any>(\n      `${environment.apiUrl}/api/v1/iot/device/ota/list/firmware/${id}/?page=1&limit=1`,\n      requestOptions\n    );\n  }\n  disabledFirmware(uid,model_id) {\n    let auth_token = window.localStorage.getItem(\"token\");\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${auth_token}`,\n    });\n\n    const requestOptions = { headers: headers };\n    return this.http.post<any>(\n      `${environment.apiUrl}/api/v1/iot/device/ota/disable/firmware/`,\n      { firmware_uid: uid, firmware_model_id: model_id},{headers, observe:'events'}\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authgordServices: AuthService\n) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      let token = this.authgordServices.getToken();\n      if (token) {\n        // authorised so return true\n        return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/signin']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Alert, AlertOptions, AlertType } from './alert';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: AlertOptions) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: AlertOptions) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: AlertOptions) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: AlertOptions) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method\n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { DeviceListComponent } from './pages/device-list/device-list.component';\nimport { CreateDeviceComponent } from './pages/create-device/create-device.component';\nimport { FirmwareComponent } from './pages/firmware/firmware.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo : 'signin'},\n  { path: 'home', loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule), pathMatch: 'full' },\n  { path: 'signup', loadChildren: () => import('./pages/signup/signup.module').then(m => m.SignupModule), pathMatch: 'full' },\n  { path: 'contactus', loadChildren: () => import('./pages/contactus/contactus.module').then(m => m.ContactusModule), pathMatch: 'full' },\n  { path: 'forgot', loadChildren: () => import('./pages/forgot/forgot.module').then(m => m.ForgotModule), pathMatch: 'full' },\n  { path: 'password-updated', loadChildren: () => import('./pages/password-updated/password-updated.module').then(m => m.PasswordUpatedModule), pathMatch: 'full' },\n  { path: 'signin', component: SigninComponent, pathMatch: 'full' },\n  { path: 'devicelist', component: DeviceListComponent, pathMatch: 'full',canActivate: [AuthGuard] },\n  { path: 'createDevice', component: CreateDeviceComponent, pathMatch: 'full',canActivate: [AuthGuard] },\n  { path: 'firmwaredetails', component: FirmwareComponent, pathMatch: 'full',canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"top-header\">\n  <a href=\"javascript:void(0)\" (click)=\"logout()\">Logout</a>\n</div>\n<div class=\"devielist\">\n  <div class=\"company-details\">\n    <h4>Company details</h4>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item active\"><p>Organisation Name:</p> {{companyDetails?.organisation_name}}</li>\n    <li class=\"list-group-item\"><p>Contact Person:</p> {{companyDetails?.organisation_contact_person}}</li>\n    <li class=\"list-group-item\"><p>Phone:</p> {{companyDetails?.organisation_phone}}</li>\n    <li class=\"list-group-item\"><p>Email:</p> {{companyDetails?.organisation_email}}</li>\n    <li class=\"list-group-item\"><p>Address:</p> {{companyDetails?.organisation_address}}</li>\n    <li class=\"list-group-item\"><p>City:</p> {{companyDetails?.organisation_city}}</li>\n    <li class=\"list-group-item\"><p>Country:</p> {{companyDetails?.organisation_country}}</li>\n  </ul>\n  </div>\n  <div class=\"tables\">\n    <h4>Devices <span  class=\"device-count\">({{deviceList?.length}})</span></h4>\n    <a href=\"javascript:void(0)\" class=\"btn-add-devices\" routerLink=\"/createDevice\">Add device</a>\n<table class=\"table-grid\">\n  <thead>\n    <tr>\n    <th>Model Serial no</th>\n    <th>Model Name</th>\n    <th>Model Description</th>\n    <th>Created at</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor = 'let item of deviceList; let i = index'>\n    <!--<td>{{item?.uid}}</td>\n    <td>{{item?.organisation}}<td>-->\n    <td><a style=\"text-decoration: underline;\" (click)=\"getFirmware(item.uid)\" href=\"javascript:void(0);\">{{item?.model_serial_no}}</a><td>\n    <td>{{item?.model_name}}<td>\n    <td>{{item?.model_description}}<td>\n    <td>{{item?.created_at}}<td>\n  </tr>\n</tbody>\n</table>\n</div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from 'src/app/service.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n\n  deviceList : any[];\n  companyDetails: any;\n\n  constructor(private service : ServiceService,private router:Router,private alertService: AlertService) {\n    //this.companyDetails = service.companyDetails;\n  }\n\n  ngOnInit(): void {\n    document.querySelector('html').classList.add('devicelist');\n    this.service.getDeviceList().subscribe(\n      data => {\n        if(data.status==\"success\")\n        {\n          this.deviceList = data.data.device_models;\n          this.companyDetails = this.service.companyDetails;\n          this.deviceList.forEach(function(result, index) {\n            let date =new Date(result.created_at);\n                  console.log(date)\n           result.created_at=[date.getFullYear(), date.getMonth()+1, date.getDate()].join('/');\n          // return result;\n           //console.log(result.created_at)\n\n          });\n          console.log(this.deviceList)\n        }\n        else{\n          console.log('error')\n         // this.errorMessage = data.Message;S\n        }\n      },\n      error => {\n        console.log(error.error.status)\n        if(error.error.status == \"error\") {\n          window.localStorage.setItem(\"token\", '');\n         // this.router.navigate(['/signin']);\n        }\n        //this.errorMessage = error.message;\n      });\n\n\n  }\n  logout() {\n    this.alertService.success('You have been successfully logged out!', { keepAfterRouteChange : true });\n    window.localStorage.setItem(\"token\", '');\n    this.router.navigate(['/signin']);\n  }\n  getFirmware(uid) {\n    this.router.navigate(['/firmwaredetails', {id: uid}])\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}